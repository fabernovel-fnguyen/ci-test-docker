name: Run Standard Performance Analysis
on:
  push

env:
  HEART_DEFAULT_OPTIONS: -e USE_LIGHTHOUSE=true

jobs: 
  scan:
    uses: ./.github/workflows/scan-conf-files.yaml
    with:
      directory: ./ci/heart/config # optional

  pull-cache-image:
    uses: ./.github/workflows/pull-and-cache-docker-image.yaml
    with:
      cache-directory: cache
      image-name: ghcr.io/fabernovel-fnguyen/heart-standard:latest
      registry: ghcr.io
    secrets: 
      username: ${{ github.actor }}
      password: ${{ secrets.PAT_TOKEN }}

  heart-standard:
    needs: [scan, pull-cache-image]
    
    uses: ./.github/workflows/batch-standard-analysis.yaml
    with:
      files: ${{ needs.scan.outputs.files }}
      image-name: ghcr.io/fabernovel-fnguyen/heart-standard:latest
    secrets:
      dareboost-api-token: ${{ secrets.DAREBOOST_API_TOKEN }}
      slack-api-token: ${{ secrets.SLACK_API_TOKEN }}
      slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}

  # batch-analysis:
  #   runs-on: ubuntu-latest
  #   needs: [scan, pull-cache-image]

  #   strategy:
  #     matrix:
  #       conf-file-name: ${{ fromJson(needs.scan.outputs.files) }}
    
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2
  #     - name: Cache Docker image (as tar.gz)
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/cache
  #         key: heart
  #     - name: Load Heart image from cache
  #       run: docker load -i ~/cache/heart.tar.gz
  #     - name: Retrieve module name from configuration file path
  #       run: |
  #         var=$(echo "${{ matrix.conf-file-name }}" | cut -d '/' -f2)
  #         echo "MODULE_NAME=$var" >> $GITHUB_ENV
  #     - name: Run Heart analysis
  #       if: ${{ env.MODULE_NAME == 'lighthouse' }}
  #       run: docker run --rm -i ${{ env.HEART_DEFAULT_OPTIONS }} ${{ secrets.HEART_IMAGE_FULL_NAME }} ${{ env.MODULE_NAME }} --inline '{"url":"https://heart.fabernovel.com"}'