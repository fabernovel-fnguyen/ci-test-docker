name: Run Heart analysis using Heart Docker image
on:
  push

env:
  HEART_DOCKER_IMAGE: ghcr.io/fabernovel-fnguyen/heart:latest
  HEART_CONFIG_DIRECTORY: ./ci/heart/config

jobs: 
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve required .env parameters
        id: step1
        run: |
          echo "::set-output name=HEART_CONFIG_DIRECTORY::$(echo $HEART_CONFIG_DIRECTORY)"
        outputs:
          HEART_CONFIG_DIRECTORY: ${{ jobs.job1.steps.step1.outputs.HEART_CONFIG_DIRECTORY }}
      - 
        uses: ./.github/workflows/scan-conf-files.yaml
        with:
          directory: ${{ steps.step1.outputs.HEART_CONFIG_DIRECTORY }}

  # job2:
  #   id: job2
  #   uses: ./.github/workflows/pull-and-cache-docker-image.yaml    
  #   with:
  #     image-name: $HEART_DOCKER_IMAGE
  #     username: $github.actor
  #     password: $secrets.GITHUB_TOKEN


  # analysis:
  #   runs-on: ubuntu-latest
  #   needs: [scan-conf-files, cache-heart-image]

  #   strategy:
  #     matrix:
  #       conf-file-name: ${{ fromJson(needs.scan-conf-files.outputs.file) }}
    
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2
  #     - name: Cache Docker image (as tar.gz)
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache
  #         key: heart
  #     - name: Load Heart image from cache
  #       run: docker load -i ~/.cache/heart_latest.tar.gz
  #     - name: Establish current file name from configuration path
  #       id: conf-dir-and-file-name
  #       run: |
  #         echo '::set-output name=value::$(var=${{ matrix.conf-file-name }} && cut -d'/' -f5- <<< "$var")'
  #     - name: Run Heart analysis
  #       run: docker run --rm -i ghcr.io/fabernovel-fnguyen/heart:latest --help