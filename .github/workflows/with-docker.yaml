name: Run Heart analysis using Heart Docker image
on:
  push

jobs: 

  pull-test:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub container registry
        run: docker login ghcr.io -u "${{ github.actor }}" -p ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Docker image (as tar.gz)
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: heart
      - name: Pull Heart docker image
        run: docker pull ghcr.io/fabernovel-fnguyen/heart:latest
      - name: Cache Heart Docker image as .tar file
        run: docker save ${{ secrets.image-name }} | gzip > ~/.cache/${inputs.image-name}.tar.gz

  scan:
    uses: ./.github/workflows/scan-conf-files.yaml

  pull-image:
    uses: ./.github/workflows/pull-and-cache-docker-image.yaml    
    secrets: 
      image-name: ${{ secrets.HEART_IMAGE_FULL_NAME }}
      registry: ${{ secrets.CONTAINER_REGISTRY_NAME }}
      username: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}


  analysis:
    runs-on: ubuntu-latest
    needs: [scan, pull-image]

    strategy:
      matrix:
        conf-file-name: ${{ fromJson(needs.scan.outputs.files) }}
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Cache Docker image (as tar.gz)
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: heart
      - name: Load Heart image from cache
        run: docker load -i ~/.cache/heart_latest.tar.gz
      - name: Establish current file name from configuration path
        id: conf-dir-and-file-name
        run: |
          echo '::set-output name=value::$(var=${{ matrix.conf-file-name }} && cut -d'/' -f5- <<< "$var")'
      - name: Run Heart analysis
        run: docker run --rm -i ghcr.io/fabernovel-fnguyen/heart:latest --help